---
swagger: '2.0'
info:
  version: 1.0.0
  title: Authoring assets
  description: Use the Watson Content Hub Asset service Rest APIs to work with assets. Assets are file types that are uploaded or created such as an image file, video file, or text that are used in content items. You can create, retrieve, update, and delete assets in a database. Managed assets are those located in the root dxdam directory as specified by its path and are visible on the Watson Content Hub UI. Additionally, these assets are able to have their workflow status managed.
x-ibm-dx-api-visibility: public
basePath: /authoring/v1
paths:
  /assets:
    get:
      tags:
        - Authoring asset
      summary: Retrieve all assets.
      description: Use this endpoint to retrieve all assets from the database.
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          description: Set the limit for the maximum number of assets to return in a single result. Set to 50 by default.
          required: false
          type: integer
          default: 50
        - name: offset
          in: query
          description: Use the offset parameter to specify the number of assets to skip from the beginning of the list and return the rest.
          required: false
          type: integer
          default: 0
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: include
          in: query
          description: Additional asset fields that are specified here are returned. Fields that can be included are links and metadata. Fields are to be provided as a comma-separated list.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
      responses:
        200:
          description: Successfully lists a paged result view of all the asset in the database.
          schema:
            $ref: '#/definitions/QueryResult'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
        - viewer
    post:
      tags:
        - Authoring asset
      summary: Create an asset.
      description: |
        Use this endpoint to create an asset. There are two ways to use this endpoint. The first method is to create a resource separately, then provide the resource id in the json body of the request along with any other desired data. The second method is to provide resource binary as a multipart field. Another multipart field containing any additional data can then be optionally provided. The second method allows the asset and resource to be created simultaneously. Note:- If Watson tag analysis is enabled, it starts in the background. Watson analyzes and provides tag recommendations for the asset that is created.
        ### Method 1 (Create asset and resource separately): ###
        #### Create the resource ####
          See POST /resource for details on how to create a resource.
          #
        #### Create the asset ####
          Create an asset by providing the resource id obtained from the previous step. Additional data about the asset can also be optionally provided. If an asset exists in the specified path, it is overwritten. The path that you provide must contain a leading slash. The path and name fields are optional and are generated from the resource’s name by default.
          #

        #### Example request body: ####
          ~~~
            {
              "resource": "8d21025d21e7b3595cbf630fb9d7212b",
              "path": "/Screen Shot 2016-05-11 at 6.52.22 PM",
              "description": "Screenshot",
              "name": "Important screenshot",
              "tags": {
                "values": [
                  "screenshot"
                ]
              },
              "status": "draft"
            }
          ~~~
        #
        ### Method 2 (Create asset and resource simultaneously): ###
        #### Set the Content-Type header ####
          Set the Content-Type header to 'multipart/form-data'.
          #
        #### Set the 'resource' field on the multipart form ####
          The resource field on the multipart form should contain your resource binary. The following headers are required on this form part:
          1. Content-Type header specifying the format of the resource.
          2. The filename field on the Content-Disposition header of this form part specifying the resource name.
          #
        #### Set the 'data' field on the multipart form (optional) ####
          Additional data about the asset can be optionally provided. If an asset exists in the specified path, it is overwritten. The path that you provide must contain a leading slash. The path and name fields are optional and are generated from the resource’s name by default.
          #
        #### Example value in field: ####
          ~~~
            {
              "path": "/Screen Shot 2016-05-11 at 6.52.22 PM",
              "description": "Screenshot",
              "name": "Important screenshot",
              "tags": {
                "values": [
                  "screenshot"
                ]
              },
              "status": "draft"
            }
          ~~~
        #
        #### Create the asset and resource ####
          Create the asset and resource simultaneously by posting the form.
          #
      consumes:
        - application/json
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: asset
          in: body
          description: Provide all the data that is needed to create a new asset. This is only required when creating an asset and resource separately. The resource id is required. If an asset exists in the specified path, it is overwritten. The path that you provide must contain a leading slash. The path and name fields are optional and are generated from the resource’s name by default.
          required: true
          schema:
            type: object
            title: Asset Parameters
            properties:
              resource:
                type: string
                description: The id of the resource this asset is for
              name:
                type: string
                description: Name of the asset
              path:
                type: string
                description: The path to this asset, must begin with a leading slash. A unique constraint is placed on this path so that no other asset can have the same path. Paths begining with "/dxdam/" are managed assets.
              description:
                type: string
                description: Description of the asset
              tags:
                description: The "values" array defines the user selected tags. The other two properties "declined" and "suggested" relate directly to the interaction with the cognitive analysis feature.
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: string
                      description: The name of the tag
              id:
                description: The id of the asset to create
                type: string
              categoryIds:
                description: The IDs of the categories that define how this asset is categorized.
                type: array
                items:
                  type: string
              status:
                type: string
                description: The workflow status of the asset. This value can only be set for managed assets.
                enum:
                  - ready
                  - draft
                  - retired
            example:
              resource: 8d21025d21e7b3595cbf630fb9d7212b
              path: /Screen Shot 2016-05-11 at 6.52.22 PM
              description: Screenshot
              name: Important screenshot
              tags:
                values:
                  - screenshot
              status: draft
            required:
              - resource
        - name: md5
          in: query
          description: Provide the Base64 encoded MD5 checksum of the resource. This is only used when creating the asset and resource simultaneously.
          required: false
          type: string
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: include
          in: query
          description: Additional asset fields that are specified here are returned. Fields that can be included are links and metadata. Fields are to be provided as a comma-separated list.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: analyze
          in: query
          description: Set the analyze parameter to true to enable the Watson tag analysis. Analysis will only occur for managed assets.
          required: false
          type: boolean
        - name: autocurate
          in: query
          description: Set the autocurate parameter to true automatically curate and accept all suggested tags.
          required: false
          type: boolean
        - name: projectId
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          format: string
          description: |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
        - name: versionDirective
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          enum:
            - start-edit
            - restore
            - user-requested
          description: |
            Optionally specify a directive to contextualise this update and inform how/if the item will be versioned.
        - name: x-ibm-dx-tier
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description: This value specifies the tier the tenant has purchased.
          required: true
        - name: x-ibm-dx-project-id
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description:  |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
        - name: x-ibm-dx-publish-priority
          x-ibm-dx-api-visibility: public
          in: header
          type: string
          format: string
          enum: [now]
          description: Specify `now` to bypass the publishing schedule.
      responses:
        201:
          description: Successfully created a new asset.
          schema:
            $ref: '#/definitions/Asset'
        400:
          description: The required parameters are missing or invalid, or the number of allowed assets have been reached. Please read the error message and alter the request accordingly.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: An asset already exists with the given ID.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
  /assets/{id}:
    get:
      tags:
        - Authoring asset
      summary: Retrieve an existing asset.
      description: Use this endpoint to retrieve an existing asset that matches the ID that is specified from the database. A conditional request is supported.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Provide the ID of the asset that you want to retrieve.
          required: true
          type: string
        - name: If-None-Match
          in: header
          type: string
          description: Provide the double quoted revision of the asset. If this value matches the newest version, a 304 Not Modified response will be returned.
          required: false
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: include
          in: query
          description: Additional asset fields that are specified here are returned. Fields that can be included are links and metadata. Fields are to be provided as a comma-separated list.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: projectId
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          format: string
          description: |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
        - name: x-ibm-dx-project-id
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description:  |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
      responses:
        200:
          description: Successfully retrieved an existing asset that matches the ID that you provided.
          schema:
            $ref: '#/definitions/Asset'
        304:
          description: The Etag provided in the If-None-Match header corresponds to the latest version.
        404:
          description: The asset with the provided id was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        412:
          description: The Etag provided in the If-None-Match header does not correspond to the latest version.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
        - viewer
    delete:
      tags:
        - Authoring asset
      summary: Delete an existing asset.
      description: Use this endpoint to delete an existing asset from the database.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Provide the ID of the asset that you want to delete.
          required: true
          type: string
        - name: If-Match
          in: header
          type: string
          description: Provide an Etag value from a previous request to check when an asset was last updated. If the Etag value that you provide is old, the call returns a 412 with the latest version of the asset.
          required: false
        - name: x-ibm-dx-publish-priority
          x-ibm-dx-api-visibility: public
          in: header
          type: string
          format: string
          enum: [now]
          description: Specify `now` to bypass the publishing schedule.
      responses:
        204:
          description: Successfully deleted the asset that matches the ID that you provided.
        404:
          description: The asset with the provided id was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: The Etag provided in the If-Match header does not correspond to the latest version.
          schema:
            $ref: '#/definitions/ErrorResponse'

        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
    put:
      tags:
        - Authoring asset
      summary: Update an existing asset.
      description: Use this end-point to update an existing asset that matches the ID that is specified. A conditional request is supported. Note:- If Watson tag analysis is enabled, it starts in the background. Watson analyzes and provides tag recommendations for the asset that is created.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Provide the ID of the asset that you want to update.
          required: true
          type: string
        - name: asset
          in: body
          description: Provide all the data that you want to update in this asset. The resource data that you provided is validated. If you change the resource of the asset with a new resource, it must not cause any changes to the asset. The path that you provide must contain a leading slash and must be unique and unchanged. The path and name fields are optional and are generated from the resource’s name by default.
          required: true
          schema:
            type: object
            properties:
              resource:
                type: string
              name:
                type: string
              path:
                type: string
              description:
                type: string
              tags:
                type: array
                items:
                  type: string
              categoryIds:
                type: array
                items:
                  type: string
            example:
              resource: 8d21025d21e7b3595cbf630fb9d7212b
              path: /Screen Shot 2016-05-11 at 6.52.22 PM
              description: Screenshot
              tags:
                values:
                  - screenshot
            required:
              - resource
        - name: If-Match
          in: header
          type: string
          description: Provide an Etag value from a previous request to check if the asset is the latest. If the value that you provided is old, a 412 Precondition Failed  response will be returned.
          required: false
        - name: x-ibm-dx-tier
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description: This value specifies the tier the tenant has purchased.
          required: true
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: include
          in: query
          description: Additional asset fields that are specified here are returned. Fields that can be included are links and metadata. Fields are to be provided as a comma-separated list.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: forceOverride
          in: query
          description: Specifies whether revision checking should be disabled.
          type: boolean
          default: false
          required: false
        - name: versionDirective
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          enum:
            - start-edit
            - restore
            - user-requested
          description: |
            Optionally specify a directive to contextualise this update and inform how/if the item will be versioned.
        - name: x-ibm-dx-publish-priority
          x-ibm-dx-api-visibility: public
          in: header
          type: string
          format: string
          enum: [now]
          description: Specify `now` to bypass the publishing schedule.
      responses:
        200:
          description: Successfully updated the asset that matches the ID that you provided.
          schema:
            $ref: '#/definitions/Asset'
        400:
          description: The required parameters are missing or invalid, or the number of allowed assets have been reached. Please read the error message and alter the request accordingly.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: The asset was updated by another user whilst you tried to update it. Please review the latest version before retrying.
          schema:
            $ref: '#/definitions/ErrorResponse'
        412:
          description: The Etag provided in the If-Match header does not correspond to the latest version.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
  /assets/record:
    get:
      tags:
        - Authoring asset
      summary: Retrieve an existing asset by path.
      description: Use this endpoint to retrieve an existing asset that matches the path that has been set. A conditional request is supported.
      produces:
        - application/json
      parameters:
        - name: path
          in: query
          description: Provide the path of the asset that you want to retrieve.
          required: true
          type: string
        - name: If-None-Match
          in: header
          type: string
          description: Provide the double quoted revision of the asset. If this value matches the newest version, a 304 Not Modified response will be returned.
          required: false
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: include
          in: query
          description: Additional asset fields that are specified here are returned. Fields that can be included are links and metadata. Fields are to be provided as a comma-separated list.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: projectId
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          format: string
        - name: x-ibm-dx-project-id
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description:  |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
      responses:
        200:
          description: Successfully retrieved an existing asset that matches the path that you provided.
          schema:
            $ref: '#/definitions/Asset'
        304:
          description: The Etag provided in the If-None-Match header corresponds to the latest version.
        400:
          description: The path provided was not valid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: The asset with the provided path was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        412:
          description: The Etag provided in the If-None-Match header does not correspond to the latest version.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
        - viewer
  /assets/resource:
    get:
      tags:
        - Authoring asset
      summary: Retrieve a resource stream by the asset path.
      description: Use this endpoint to retrieve an existing resource stream that matches the path of the corresponding asset.
      x-ibm-dx-api-visibility: private
      produces:
        - "*/*"
      parameters:
        - name: path
          in: query
          description: Provide the path of the asset that you want to retrieve (as a query parameter).
          required: true
          type: string
        - name: projectId
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          format: string
          description: |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
        - name: x-ibm-dx-project-id
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description:  |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
      responses:
        200:
          description: Successfully retrieved an existing resource that corresponds to the asset path that you provided.
          schema:
            format: binary
            title: binary string
        400:
          description: The path provided was not valid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: The asset with the provided path was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
        - viewer
    put:
      tags:
        - Authoring asset
      summary: Update an asset's resource by the asset path.
      description: Use this endpoint to update the asset at the specified path with the provided resource. If no asset exists at the path, a new asset is created at that path with the provided resource. If an asset exists at the path and the md5 checksum parameter is provided, the md5 of the asset\'s resource is compared to the user provided checksum. If they are different, then the asset\'s resource is updated to the provided resource.
      x-ibm-dx-api-visibility: private
      produces:
        - application/json
      parameters:
        - name: binary
          in: body
          description: Provide the binary data that is required to create a resource.
          required: true
          schema:
            type: string
            format: binary
        - name: Content-Type
          in: header
          type: string
          description: Provide the media type of the binary.
          required: true
          default: application/octet-stream
        - name: x-ibm-dx-tier
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description: This value specifies the tier the tenant has purchased.
          required: true
        - name: path
          in: query
          description: Provide the path of the asset containing the resource that you want to update (as a query parameter).
          required: true
          type: string
        - name: md5
          in: query
          type: string
          description: Provide the Base64 encoded MD5 checksum of the resource.
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: include
          in: query
          description: Additional asset fields that are specified here are returned. Fields that can be included are links and metadata. Fields are to be provided as a comma-separated list.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: analyze
          in: query
          description: Set the analyze parameter to true to enable the Watson tag analysis. Analysis will only occur for managed assets.
          required: false
          type: boolean
        - name: autocurate
          in: query
          description: Set the autocurate parameter to true automatically curate and accept all suggested tags.
          required: false
          type: boolean
        - name: version
          x-ibm-dx-api-visibility: private
          in: query
          type: boolean
          description: |
            Optionally specifies whether the item is to be associated with a version. Can only be used on ready asset.
        - name: label
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          format: string
          description: |
            Optionally can be provided alongside the version query param in order to customize the version's name.
        - name: projectId
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          format: string
          description: |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
        - name: x-ibm-dx-project-id
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description:  |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
      responses:
        200:
          description: Successfully updated the asset resource at the asset path that you provided.
          schema:
            $ref: '#/definitions/Asset'
        201:
          description: An asset did not exist at the specified path. A new asset was created with the provided resource.
          schema:
            $ref: '#/definitions/Asset'
        400:
          description: The required parameters are missing or invalid, the binary size limit was exceeded, or the checksum provided was not correct. Please read the error message and alter the request accordingly.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
  /assets/resource/{path}:
    get:
      tags:
        - Authoring asset
      summary: Retrieve a resource stream by the asset path.
      description: Use this endpoint to retrieve an existing resource stream that matches the path of the corresponding asset.
      x-ibm-dx-api-visibility: private
      produces:
        - "*/*"
      parameters:
        - name: path
          in: path
          description: Provide the path of the asset that you want to retrieve (as a relative path).
          required: true
          type: string
        - name: projectId
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          format: string
          description: |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
        - name: x-ibm-dx-project-id
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description:  |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
      responses:
        200:
          description: Successfully retrieved an existing resource that corresponds to the asset path that you provided.
          schema:
            format: binary
            title: binary string
        400:
          description: The path provided was not valid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: The asset with the provided path was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
        - viewer
    put:
      tags:
        - Authoring asset
      summary: Update an asset's resource by the asset path.
      description: Use this endpoint to update the asset at the specified path with the provided resource. If no asset exists at the path, a new asset is created at that path with the provided resource. If an asset exists at the path and the md5 checksum parameter is provided, the md5 of the asset\'s resource is compared to the user provided checksum. If they are different, then the asset\'s resource is updated to the provided resource.
      x-ibm-dx-api-visibility: private
      produces:
        - application/json
      parameters:
        - name: binary
          in: body
          description: Provide the binary data that is required to create a resource.
          required: true
          schema:
            type: string
            format: binary
        - name: Content-Type
          in: header
          type: string
          description: Provide the media type of the binary.
          required: true
          default: application/octet-stream
        - name: x-ibm-dx-tier
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description: This value specifies the tier the tenant has purchased.
          required: true
        - name: path
          in: path
          description: Provide the path of the asset containing the resource that you want to update (as a relative path).
          required: true
          type: string
        - name: md5
          in: query
          type: string
          description: Provide the Base64 encoded MD5 checksum of the resource.
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: include
          in: query
          description: Additional asset fields that are specified here are returned. Fields that can be included are links and metadata. Fields are to be provided as a comma-separated list.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: analyze
          in: query
          description: Set the analyze parameter to true to enable the Watson tag analysis. Analysis will only occur for managed assets.
          required: false
          type: boolean
        - name: autocurate
          in: query
          description: Set the autocurate parameter to true automatically curate and accept all suggested tags.
          required: false
          type: boolean
        - name: version
          x-ibm-dx-api-visibility: private
          in: query
          type: boolean
          description: |
            Optionally specifies whether the item is to be associated with a version. Can only be used on ready asset.
        - name: label
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          format: string
          description: |
            Optionally can be provided alongside the version query param in order to customize the version's name.
        - name: projectId
          x-ibm-dx-api-visibility: private
          in: query
          type: string
          format: string
          description: |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
        - name: x-ibm-dx-project-id
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description:  |
            Optionally specifies the context for draft overlay. Contains the project id, or special values:
                * draft for standalone draft overlays
                * none for no project overlay.
      responses:
        200:
          description: Successfully updated the asset resource at the asset path that you provided.
          schema:
            $ref: '#/definitions/Asset'
        201:
          description: An asset did not exist at the specified path. A new asset was created with the provided resource.
          schema:
            $ref: '#/definitions/Asset'
        400:
          description: The required parameters are missing or invalid, the binary size limit was exceeded, or the checksum provided was not correct. Please read the error message and alter the request accordingly.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
  /assets/{id}/analyze:
    post:
      summary: Watson analyzes the asset. The analysis results are stored on the asset itself.
      description: |
        Use the /assets/{id}/analyze endpoint to perform Watson analysis on asset if supported.
      parameters:
        - name : id
          in : path
          description: Provide the ID of the asset item that you need to perform Watson analytics.
          type: string
          required: true
        - name: autocurate
          in: query
          description: Set the autocurate parameter to true automatically curate and accept all suggested tags.
          required: false
          type: boolean
      tags:
        - Authoring asset
      responses:
        200 :
          description: The asset after getting updated with watson analysis results.
          schema:
            $ref: '#/definitions/Asset'
        400 :
          description: The analysis of this asset is not supported.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404 :
          description: The asset item with ID {id} was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
  /assets/{id}/create-draft:
    post:
      summary: Create a draft of existing asset.
      description: Use this endpoint to create draft of existing asset and return the draft if successful.
      parameters:
        - name : id
          in : path
          description: Provide the ID of the asset item that you need to create draft of.
          type: string
          required: true
        - name: include
          in: query
          description: Additional asset fields that are specified here are returned. Fields that can be included are links and metadata. Fields are to be provided as a comma-separated list.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
      tags:
        - Authoring asset
      responses:
        201 :
          description: Successfully created a new asset draft of given asset.
          schema:
            $ref: '#/definitions/Asset'
        400 :
          description: The draft creation on provided asset is not supported.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404 :
          description: The asset item with ID {id} was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
  /assets/{id}/add-profile/{profileId}:
    post:
      tags:
        - Authoring asset
      summary: Add an image profile to an existing asset.
      description: Use this end-point to add an image profile to an existing asset with the specified id.
      x-ibm-dx-api-visibility: private
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Provide the ID of the asset that you want to update.
          required: true
          type: string
        - name: profileId
          in: path
          description: Provide the ID of the image profile that you want to add to the asset.
          required: true
          type: string
        - name: x-ibm-dx-tier
          x-ibm-dx-api-visibility: private
          in: header
          type: string
          format: string
          description: This value specifies the tier the tenant has purchased.
          required: true
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
      responses:
        200:
          description: Successfully updated the asset that matches the ID that you provided.
          schema:
            $ref: '#/definitions/Asset'
        400:
          description: The required parameters are missing or invalid, or the number of allowed assets have been reached. Please read the error message and alter the request accordingly.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: The asset was updated by another user whilst you tried to update it. Please review the latest version before retrying.
          schema:
            $ref: '#/definitions/ErrorResponse'
        412:
          description: The Etag provided in the If-Match header does not correspond to the latest version.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
  /assets/train/by-taxonomy/{id}:
    post:
      summary: Train a custom classifier based off a taxonomy.
      description: Use this endpoint to create a custom classifier that is trained by assets that are categorised with categories from the given taxonomy.
      x-ibm-dx-api-visibility: private
      parameters:
        - name : id
          in : path
          description: Provide the ID of the taxonomy that contains categories and assets. At least two cateogries and at least 10 different assets in each category in this taxonomy.
          type: string
          required: true
      tags:
        - Authoring asset
      responses:
        202 :
          description: Details of the customer classifier that attempt to create.
          schema:
            type: object
            properties:
              classifier_id:
                type: string
                description: Id of the custom classifier.
                example: 0deb82dcx77b7x420exab8exb09a0e_1744616695
              name:
                type: string
                description: Name of the custom classifier.
                example: 0deb82dc-77b7-420e-ab8e-b09a0e608378_c62d332e-957d-436d-ab32-fd83d0cd6883
              owner:
                type: string
                description: Owner id of the custom classifier.
                example: 11d69d6a-5f2f-43f7-a8f4-982ac483d0a6
              status:
                type: string
                enum: [training, ready, failed]
                description: Status of the custom classifier.
                example: training
              created:
                type: string
                format: date-time
                description: Creation date of the custom classifier.
                example: "2017-09-19T01:16:44.919Z"
              classes:
                type: array
                items:
                  type: object
                  properties:
                    class:
                      type: string
                      description: Id of the class
                      example: ea63b0c5%6d9e%44c5%8c6f%d850de03eb61

        400 :
          description: The provided taxonomy is not supported or invalid for training.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404 :
          description: The taxonomy with ID {id} was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
  /assets/views/by-modified:
    get:
      summary: Retrieve all assets modified within the specified date
      description: Use the /assets/views/by-modified endpoint to retrieve all assets that was modified within the date range specified.
      produces:
        - application/json
      parameters:
        - name: start
          in: query
          description: Provide the date and time of when the last modifications were made to the asset that you want returned. The assets that were modified on or after this date and time are returned. The date value must be in the ISO 8601 format YYYY-MM-DD T hh:mm:ss:sssZ.
          required: false
          type: string
          format: date-time
        - name: end
          in: query
          description:  Provide the date and time of when the last modifications were made to the asset that you want returned. The assets that were modified on or before this date and time are returned. The date value must be in the ISO 8601 format YYYY-MM-DD T hh:mm:ss:sssZ.
          required: false
          type: string
          format: date-time
        - name: offset
          in: query
          description: Use the offset parameter to specify the number of assets to skip from the beginning of the list and return the rest.
          default: 0
          required: false
          type: integer
        - name: limit
          in: query
          description: Set the limit for the maximum number of assets to return in a single result.
          default: 50
          required: false
          type: integer
        - name: order
          in: query
          description: Specify whether you want the assets to be returned in ascending or descending order. Assets are returned in descending order by default.
          required: false
          default: descending
          type: string
          enum:
            - descending
            - ascending
        - name: fields
          in: query
          description: Only the asset fields that are specified here are returned for each result. Any asset field is a valid value and these can be specified in a comma-separated list. For example, to list the asset fields name and ID, provide the value ID, and name. All asset fields are returned by default.
          required: false
          allowEmptyValue: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: include
          in: query
          description: Additional asset fields that are specified here are returned. Fields that can be included are links and metadata. Fields are to be provided as a comma-separated list.
          required: false
          type: array
          items:
            type: string
      tags:
        - Authoring asset
      responses:
        200:
          description: Successfully lists a paged result view of all assets that was modified within the date range specified.
          schema:
            $ref: '#/definitions/QueryResult'
        400:
          description: The provided parameters are invalid. Please read the error message and alter the request accordingly.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          $ref: '#/responses/DataStoreUnavailable'
        default:
          $ref: '#/responses/UnexpectedError'
      x-ibm-dx-security-user-roles:
        - admin
        - manager
        - editor
        - viewer
  /assets/views/references:
    get:
      summary: Retrieve all items and also for each its outgoing references.The results are ordered by the id of the item.
      x-ibm-dx-api-visibility: private
      description: |
        This endpoint returns data in a format the reference service understands, used for internal synchronization.
      parameters:
        - name: startId
          in: query
          required: false
          type: string
          description: "If start does not uniquely identify the result to start from, you can specify the UUID of the result as startId. Note: when reversing the order you do not switch start and end ids."
        - name: endId
          in: query
          required: false
          type: string
          description:  "If end does not uniquely identify the result to end at, you can specify the UUID of the result as endId. Note: when reversing the order you do not switch start and end ids."
        - name: limit
          in: query
          required: false
          type: number
          format: integer
          description: "Set the limit for the maximum number of content items to return in a single result. The default value is 50. You can pass 0 to unset the limit and stream all available results. A streaming parser can be avoided with format=sequence."
        - name: format
          in: query
          required: false
          type: string
          enum: [feed, array, sequence]
          description: >
            Specify the result format.
             * `feed` - (default) returns a wrapper with links
             * `array` - returns just the array of results
             * `sequence` - each result is a separate JSON document on a new line
        - name: offset
          in: query
          required: false
          type: number
          format: integer
          description: "Use the offset parameter to specify the number of content items to skip from the beginning of the list and return the rest. Note: large offsets perform poorly. Use start keys to index into large result sets. Also see pageMode."
        - name: pageMode
          in: query
          required: false
          type: string
          enum: [offset, deep]
          description: >
            Specify the next and previous page link mode.
             * `offset` - (default) allows paging forward or backwards, but only a small number of times
             * `deep` - uses index keys to efficiently page through a large result set, but only in one direction
        - name : fields
          in : query
          required : false
          type : string
          description: "Only the asset items fields that are specified here are returned for each result. Any content item field is a valid value and can be specified as a comma-separated list. For example, to list the content item fields name and ID, provide the value ID, and name. All content item fields are returned by default."
        - name: order
          in: query
          required: false
          type: string
          enum: [ascending, descending]
          description: >
            Specify the order of the results.
             * `ascending` - (default) result keys are increasing
             * `descending` - result keys are decreasing

            It is not necessary to switch the start and end keys and ids when reversing the order.
      tags:
        - Authoring asset
      responses:
        200:
          description: Successfully lists a result of all items with their outgoing references ordered by their id.
          schema:
            type: object
            properties:
              limit:
                type : integer
                description:  The page size. 0 means unlimited.
                example: 0
              offset:
                type : integer
                description: The number of items to skip from the beginning of the list.
                example: 0
              href:
                type: string
                description: A link to the current page.
                example: /authoring/v1/assets/views/reference?limit=0
              items :
                type : array
                items:
                  type: object
                  properties:
                    doc:
                      type: object
                      description: the content API Json
                    references:
                      description: "A list of all outgoing references this item reports to the reference service"
                      type: array
                      items:
                        type: object
                        properties:
                          classification:
                            type: string
                            example: "content-type"
                          id:
                            type: string
                            example: "fe31fbf4-4bc4-4ffa-9b27-615af51d23fe"
                          type:
                            description: The type of reference, if the reference is soft, the item can handle if the reference item is removed.
                            enum:
                              - hard
                              - soft


        401 :
          description: You do not have authorization to retrieve the content items from the database.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: Unable to list the content items in the database as the service is unavailable. Try again later.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  Asset:
    type: object
    properties:
      id:
        type: string
        description: The id of the asset.
        readOnly: true
        example: 0a800487f06d71eaf4cffdfde1ab28bc
        maxLength: 100
        pattern: "^[a-zA-Z0-9*.\\-_:]*$"
      rev:
        type: string
        description: The revision of the asset.
        readOnly: true
        pattern: "^[0-9]+-.*$"
        example: 2-c839bbb8844549c2e298275c4b2adcb8
      name:
        type: string
        description: Name of the asset.
      classification:
        type: string
        readOnly: true
        enum:
          - asset
        description: The classification of the asset is always "asset".
      assetType:
        type: string
        readOnly: true
        description: The type of asset. Determined by the media type of the resource.
        enum:
          - image
          - video
          - file
      description:
        type: string
        description: Description of the asset.
        example: This is an image of a person.
        maxLength: 500
      creatorId:
        type: string
        readOnly: true
        description: The ID of the user that created the asset.
        example: e98c185a-cafb-4c32-ad94-dd4ffaa28a7e
      created:
        type: string
        format: date-time
        readOnly: true
        description: The date and time the asset was created.
      creator:
        type: string
        readOnly: true
        description: The name of the user who originally created the asset.
      lastModifierId:
        type: string
        readOnly: true
        description: The ID of the user that last modified the asset.
        example: e98c185a-cafb-4c32-ad94-dd4ffaa28a7e
      lastModified:
        type: string
        format: date-time
        readOnly: true
        description: The date and time the asset was last modified.
      lastModifier:
        type: string
        readOnly: true
        description: The name of the user who last modified the item.
      systemModified:
        type: string
        format: date-time
        readOnly: true
        description: The date and time the asset was last modified by the system.
      fileName:
        type: string
        readOnly: true
        description: The file name of the asset's resource.
        example: hub.png
      fileSize:
        type: integer
        readOnly: true
        description: The size of the asset's resource in bytes.
        example: 123125
      mediaType:
        type: string
        readOnly: true
        description: Media type of the asset's resource.
        example: "image/png"
      keywords:
        type: array
        readOnly: true
        items:
          type: string
        description: Keywords of an asset of document type, produced by cognitive analysis. Will be automatically set when watson analysis upon completion. Only populated for PDF, doc, html and plain text files.
      tags:
        title: Tags
        type: object
        description: The "values" array defines the user selected tags. The other two properties "declined" and "suggested" relate directly to the interaction with the cognitive analysis feature.
        properties:
          values:
            type: array
            description: Tags can be set here. Tags suggested by cognitive analysis should be copied into this array if you wish to accept them.
            items:
              type: string
            example:
              - faces:Lebron James
              - sports
              - basketball
          declined:
            type: array
            description: This editable field is given for the store values from cogntivie analysis that the user has dismissed/rejected. This essentially. It is up to the API client to update this field. This field is not indexed for search.
            items:
              type: string
          suggested:
            readOnly: true
            description: Suggested field is a read only field that is populated if cognitive analysis is done on this asset. Once reviewed the suggestions can be cleared with a query parameter see update endpoint. The tags come in the form of "prefix:tag" e.g. "classification:sky" This field is not indexed for search.
            type: array
            items:
              type: string
          analysis:
            description: This field indicates the progress of watson analysis.
            readOnly: true
            type: string
            enum:
              - complete
              - failed
              - none
              - pending
          analysisStarted:
            description: This field exists when analysis is launched but not complete. The value is the epoch time of when the analysis began.
            type: integer
            readOnly: true
        required:
          - values
          - declined
      resource:
        type: string
        description: The ID of the uploaded resource this asset contains.
        example: 67c621ed48921b7338b84b4f415cba6b
      digest:
        type: string
        description: The Base64 encoded MD5 digest of the resouce the asset contains.
        example: 9jwWuI3TN+PhGfHcrSJHcQ==
        readOnly: true
      path:
        type: string
        pattern: "^/[\\s\\S]+[^/]$"
        maxLength: 650
        description: The path to this asset, must begin with a leading slash. A unique constraint is placed on this path so that no other asset can have the same path. When updating path a collision results in error. Paths begining with "/dxdam/" are managed assets.
        example: /sales/images/hub.png
      categoryIds:
        type: array
        description: The IDs of the categories that define how this asset is categorized.
        items:
          type: string
        example: []
      profiles:
        type: array
        description: The IDs of image profiles to add to use on this asset.
        items:
          type: string
        example: ["8b4698e3-6283-4bc5-9e1e-fff69c2b48be"]
      profileRenditions:
        type: array
        description: The transform instructions for each of the renditions in the "profiles" array. If a rendition for one of those image profiles is not defined, a rendition with the best fit will automatically be generated.
        items:
          title: Profile Rendition
          type: object
          properties:
            profileId:
              type: string
              description: The ID of the image profile this rendition belongs to. This ID must also be specified in the "profiles" array.
            profileName:
              type: string
              readOnly: true
              description: The name of the image profile this rendition belongs to. This field will only be included when metadata is provided as a value of the include query parameter.
            key:
              type: string
              description: The key to this rendition.
            label:
              type: string
              readOnly: true
              description: The label to this rendition. This field will only be included when metadata is provided as a value of the include query parameter.
            uri:
              type: string
              readOnly: true
              description: The URI to the resource in this rendition's dimensions.
            width:
              type: number
              readOnly: true
              description: The width defined for this rendition.
            height:
              type: number
              readOnly: true
              description: The height defined for this rendition.
            transform:
              title: Transform
              type: object
              description: The transform instructions to achieve this rendition's dimensions. If not specified, a best fit transformation will automatically be generated.
              properties:
                scale:
                  type: number
                  description: The scale to perform on the original resource. The value must be between 0 (exclusive) and 1 (inclusive).
                crop:
                  title: Crop
                  type: object
                  description: The crop to apply on the resource after any scaling has been done.
                  properties:
                    x:
                      type: number
                      description: The X coordinate to start the crop from
                    y:
                      type: number
                      description: The Y coordinate to start the crop from
                    width:
                      type: number
                      description: The width to crop out
                    height:
                      type: number
                      description: The height to crop out
        example: [
        {
          "profileId": "a35f02ce-9f31-4832-8ed5-2b6d9c8b8d86",
          "profileName": "Profile E",
          "key": "renditionF",
          "label": "Rendition F",
          "transform": {
            "scale": 0.0862,
            "crop": {
              "x": 0,
              "y": 0,
              "width": 10,
              "height": 10
            }
          },
          "uri": "/authoring/v1/resources/e17b2c51-a74e-4332-80df-0f6d9340426c?resize=10px:10px&crop=10:10;0,0",
          "width": 10,
          "height": 10
        },
        {
          "profileId": "a35f02ce-9f31-4832-8ed5-2b6d9c8b8d86",
          "profileName": "Profile E",
          "key": "renditionG",
          "label": "Rendition G",
          "transform": {
            "scale": 0.17241,
            "crop": {
              "x": 0,
              "y": 0,
              "width": 20,
              "height": 20
            }
          },
          "uri": "/authoring/v1/resources/e17b2c51-a74e-4332-80df-0f6d9340426c?resize=20px:20px&crop=20:20;0,0",
          "width": 20,
          "height": 20
        }
        ]
      renditions:
        title: Renditions Metadata
        type: object
        description: The renditions for the asset. Mandatory for an image asset. Does not appear for a video or file asset.
        properties:
          default:
            type: object
            properties:
              id:
                type: string
                readOnly: true
                description: The ID of the rendition.
              source:
                type: string
                readOnly: true
                description: The link to the rendition binary.
      status:
        type: string
        readOnly: true
        description: The workflow status of the asset.
        enum:
          - ready
          - draft
          - retired
      valid:
        type: boolean
        readOnly: true
        description: Boolean that indicates if an asset can be transitioned from draft to ready. Only available on draft assets.
      draftStatus:
        type: string
        description: This property shows the status of the draft and is only valid for draft items. By default, it is in-progress.
        default: in-progress
        enum:
          - in-review
          - in-progress
          - approved
      links:
        type: object
        title: Asset Links
        readOnly: true
        properties:
          self:
            type: object
            description: Relative link to the asset itself.
            readOnly: true
            properties:
              href:
                type: string
                readOnly: true
                example: "/authoring/v1/assets/1e5fecbb-04aa-4ed2-a014-8e544ad97597:draft"
          media:
            type: object
            description: The link to the resource binary.
            readOnly: true
            properties:
              href:
                type: string
                readOnly: true
                example: "/authoring/v1/resource/myResource.jpeg"
          thumbnail:
            type: object
            description: The link to a thumbnail of the image. Only avaliable for certain assets of type image.
            readOnly: true
            properties:
              href:
                type: string
                readOnly: true
                example: "/authoring/v1/resource/myResource.jpeg?fit=around|220:145&crop=220:145;*,*"
          ready:
            type: object
            description: This link will appear for items that can be transitioned to the ready state.
            properties:
              href:
                type: string
            example:
              href: "/authoring/v1/changes/asset/1e5fecbb-04aa-4ed2-a014-8e544ad97597:draft/status/ready"
          retire:
            type: object
            description: This link will appear for items that can be transitioned to the retired state.
            properties:
              href:
                type: string
            example:
              href: "/authoring/v1/changes/asset/1e5fecbb-04aa-4ed2-a014-8e544ad97597:draft/status/retire"
          linkedDoc:
            type: object
            description: This link will appear if this item is a draft of an existing item. The link points to the primary item.
            properties:
              href:
                type: string
            example:
              href: "/authoring/v1/assets/1e5fecbb-04aa-4ed2-a014-8e544ad97597"
      usageRights:
        title: Usage Rights
        type: object
        description: Usage rights are assigned to assets to help composers understand where and when an asset can be used. For example, an asset might be used only in print, only for an advertising campaign, and only for a limited time.
        properties:
          categories:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the usage rights category associated to the asset.
                  example: "00000000-0000-0000-0000-021000c8e20"
                path:
                  type: string
                  description: Name path of the usage rights category associated to the asset. This field will only be included when metadata is provided as a value of the include query parameter.
                  example: "Usage rights/Rights managed/Usage realm/Advertising"
          expiration:
            type: string
            format: date-time
            description: The user will have up until this ISO 8601 specified date-time value before they no longer have permission to use the asset.
            example: "2017-08-28T14:00:00Z"
      review:
        type: object
        description: Information and/or state about the review.
        properties:
          id:
            type: string
            description: ID of the review.
            example: "3356c048-96d0-4d8d-9afe-5e7ae47b127a"
          name:
            type: string
            description: Name of the review.
            example: my review
          started:
            type: string
            format: date-time
            description: The ISO 8601 date-time that the review started.
            example: "2017-07-10T03:20:10Z"
          ends:
            type: string
            format: date-time
            description: The ISO 8601 date-time that the review is to be completed by.
            example: "2017-07-10T03:20:10Z"
          ended:
            type: string
            format: date-time
            description: The ISO 8601 date-time that the review actually finished on.
            example: "2017-07-12T19:40:10Z"
          ownerId:
            type: string
        additionalProperties: false
        required:
          - id
          - name
          - started
          - ownerId
      metadata:
        type: object
        description: Information extracted from an image asset's metadata.
        properties:
          width:
            type: integer
            description: Width of the image.
            readOnly: true
            example: 1000
          height:
            type: integer
            description: Height of the image.
            readOnly: true
            example: 1000
          camera:
            type: object
            description: Digital camera information extracted from the image asset's metadata.
            properties:
              make:
                type: string
                description: The manufacturer of the camera used to take the photo.
                readOnly: true
                example: NIKON CORPORATION
              model:
                type: string
                description: The model of the camera used to take the photo.
                readOnly: true
                example: NIKON D90
              focalLength:
                type: integer
                description: The focal length of the lens used to take the photo.
                readOnly: true
                example: 35
              shutterSpeed:
                type: string
                description: The shutter speed setting of the camera used to take the photo.
                readOnly: true
                example: "1/200"
              iso:
                type: integer
                description: The ISO setting of the camera used to take the photo.
                readOnly: true
                example: 100
              aperture:
                type: integer
                description: The aperture of the lens used to take the photo.
                readOnly: true
                example: 8
          coverage:
            type: string
            description: Scope of the image. Possible uses include a location or a time period.
            readOnly: true
            example: "1972-"
          creator:
            type: string
            description: Creator of the image.
            readOnly: true
            example: IBM
          Date:
            type: string
            description: Creation date and time of the image.
            readOnly: true
            example: "2017-10-23T01:23:57Z"
          description:
            type: string
            description: Description of the image.
            readOnly: true
            example: The IBM logo since 1972.
          publisher:
            type: string
            description: Publisher of the image.
            readOnly: true
            example: IBM
          rights:
            type: string
            description: Rights information of the image.
            readOnly: true
            example: IBM
          source:
            type: string
            description: Source information of the image.
            readOnly: true
            example: IBM
          subject:
            type: array
            description: Topic(s) of the image.
            readOnly: true
            items:
              type: string
              example:
                - IBM
                - logo
          title:
            type: string
            description: Title of the image
            readOnly: true
            example: IBM Logo
          headline:
            type: string
            description: Headline of the image
            readOnly: true
            example: The IBM logo since 1972.
      cognitive:
        type: object
        description: Information extracted from the asset produced by cognitive analysis
        readOnly: true
        properties:
          classifications:
            type: array
            description: The classification suggested by cognitive analysis
            readOnly: true
            items:
              type: string
              example: ["people","person","adult person"]
          faces:
            type: array
            description: Person's details. Image asset only
            readOnly: true
            items:
              type: object
              properties:
                name:
                  type: string
                  description: Name of person
                  readOnly: true
                  example: "Brad Pitt"
                gender:
                  type: string
                  description: Gender of person
                  readOnly: true
                  example: "Male"
                age:
                  type: object
                  description: Age range of person
                  readOnly: true
                  properties:
                    minimum:
                      type: integer
                      description: Minimum age of person
                      readOnly: true
                      example: 35
                    maximum:
                      type: integer
                      description: Maximum age of person
                      readOnly: true
                      example: 44
          colors:
            type: object
            description: Prominent colors from an image. Image asset only
            readOnly: true
            properties:
              vibrant:
                type: string
                example: "#c78061"
                readOnly: true
              muted:
                type: string
                readOnly: true
                example: "#ae7157"
              darkVibrant:
                type: string
                readOnly: true
                example: "#4c2c1c"
              darkMuted:
                type: string
                readOnly: true
                example: "#50453f"
              lightVibrant:
                type: string
                readOnly: true
                example: "#d4a185"
              lightMuted:
                type: string
                readOnly: true
                example: "#d4bcac"
          concepts:
            type: array
            description:  Perform concept extraction operations from documents
            readOnly: true
            items:
              type: string
              example: ["Want", "Need", "2006 albums"]
          entities:
            type: string
            description: Perform entity extraction operations from documents
            readOnly: true
            example: "people"
          keywords:
            type: array
            description: Perform keyword extraction operations from documents
            readOnly: true
            items:
              type: string
              example: ["new theme", "document", "video", "cover page"]
          status:
            type: string
            description: This field indicates the progress of watson analysis
            readOnly: true
            enum:
              - complete
              - failed
              - none
              - pending
      isManaged:
        type: boolean
        readOnly: true
        description: This field indicates whether the asset is managed or not. An asset is considered managed only if its asset path starts with "dxdam".
      altText:
        type: string
        description: A text description of the asset, used when the asset itself is not available or not displayed.
        example: "This is an image of the IBM logo."
      caption:
        type: string
        description: A caption of the asset image.
        example: "IBM"
      linkedDocId:
        type: string
        readOnly: true
        description: Provided on drafts of existing items. This is the ID of the primary item.
        example: b289c02e-2c61-4643-aba6-e6b4e94c76e3
      categories:
        type: array
        items:
          type: string
          description: The taxonomy categories that the user has associated the asset to.
          example: "banner"
    required:
      - resource
  QueryResult:
    type: object
    properties:
      limit:
        type: integer
        description: The page size. Set to 50 by default.
        example: 50
      offset:
        type: integer
        description: The number of items to skip from the beginning of the list.
        example: 0
      href:
        type: string
        description: A link to the current page.
        example: /asset?offset=50&limit=50
      next:
        type: string
        description:  A link to the next page. Only shown if a next page exists.
        example: /asset?offset=100&limit=50
      previous:
        type: string
        description: A link to the previous page. Only shown if a previous page exists.
        example: /asset?offset=0&limit=50
      items:
        type: array
        items:
          $ref: '#/definitions/Asset'
    required:
      - limit
      - offset
      - href
      - items
  ErrorResponse:
    type: object
    description: an error response.
    properties:
      requestId:
        type: string
        description: The current request ID
        example: d64dc285-0b62-aaa3-841f-de3588b64d34
      service:
        type: string
        description: The name of the service that produced the error
        example: authoring-resource
      requestMethod:
        type: string
        description: The Http method type of the current request
        example: GET
      requestUri:
        type: string
        description: The request uri
        example: "/authoring/v1/assets"
      errors:
        type: array
        items:
          $ref: '#/definitions/Error'
    required:
      - requestId
      - service
      - requestMethod
      - requestUri
      - errors
  Error:
    type: object
    description: an individual error, info or warning message.
    properties:
      code:
        type: integer
        description: The message code
      key:
        type: string
        description: The message key
        example: error.asset.1
      message:
        type: string
        description: The error message
        example: The id requested does not exist.
      description:
        type: string
        description: Optional detailed error message
        example: Please check the ID you provided is correct before retrying the request.
      category:
        type: string
        description: The message category whereby only user messages are designed to be shown to an end user
        enum:
          - API
          - USER
      level:
        type: string
        description: Indicates the message level
        enum:
          - INFO
          - WARNING
          - ERROR
      parameters:
        type: object
        description: The message parameters of this message.
      locale:
        type: string
        description: The current locale used to produce the error message.
        example: en
    required:
      - code
      - key
      - message
      - description
      - category
      - level
      - parameters
      - locale
responses:
  UnexpectedError:
    description: Unexpected error.
    schema:
      $ref: '#/definitions/ErrorResponse'
  DataStoreUnavailable:
    description: Connection failed to data store.
    schema:
      $ref: '#/definitions/ErrorResponse'
tags:
  - name: Authoring asset
    description: Authoring asset endpoints
